{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Token'ı localStorage'dan al\n    const token = localStorage.getItem('token');\n\n    // Token varsa ve backend doğrulamasını yapmak istiyorsanız\n    // burada API çağrısı yapabilirsiniz.\n    const checkTokenValidity = async () => {\n      try {\n        // API çağrısını yap\n        const response = await fetch('http://localhost:4040/auth/validate-token', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        });\n\n        // Eğer cevap başarılı değilse, ya da token geçerli değilse\n        // kullanıcıyı login sayfasına yönlendir\n        if (!response.ok) {\n          throw new Error('Token is invalid');\n        }\n      } catch (error) {\n        navigate('/login');\n      }\n    };\n    if (token) {\n      checkTokenValidity();\n    } else {\n      // Eğer token yoksa kullanıcıyı giriş sayfasına yönlendir\n      navigate('/login');\n    }\n  }, [navigate]);\n\n  // Eğer token varsa ve geçerliyse (veya doğrulama yapmadıysanız),\n  // children (korunan bileşen) render edilir.\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n_s(ProtectedRoute, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useEffect","useNavigate","Fragment","_Fragment","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","navigate","token","localStorage","getItem","checkTokenValidity","response","fetch","method","headers","ok","Error","error","_c","$RefreshReg$"],"sources":["E:/Proje/Frontend/HalisahaAppGithubReact/FootballFieldFrontEnd/halisaha-react/src/components/protectedRoute/protectedRoute.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Token'ı localStorage'dan al\r\n    const token = localStorage.getItem('token');\r\n    \r\n    // Token varsa ve backend doğrulamasını yapmak istiyorsanız\r\n    // burada API çağrısı yapabilirsiniz.\r\n    const checkTokenValidity = async () => {\r\n      try {\r\n        // API çağrısını yap\r\n        const response = await fetch('http://localhost:4040/auth/validate-token', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n        \r\n        // Eğer cevap başarılı değilse, ya da token geçerli değilse\r\n        // kullanıcıyı login sayfasına yönlendir\r\n        if (!response.ok) {\r\n          throw new Error('Token is invalid');\r\n        }\r\n      } catch (error) {\r\n        navigate('/login');\r\n      }\r\n    };\r\n\r\n    if (token) {\r\n      checkTokenValidity();\r\n    } else {\r\n      // Eğer token yoksa kullanıcıyı giriş sayfasına yönlendir\r\n      navigate('/login');\r\n    }\r\n  }, [navigate]);\r\n\r\n  // Eğer token varsa ve geçerliyse (veya doğrulama yapmadıysanız),\r\n  // children (korunan bileşen) render edilir.\r\n  return <>{children}</>;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;;IAE3C;IACA;IACA,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,EAAE;UACxEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAG,UAASP,KAAM;UACnC;QACF,CAAC,CAAC;;QAEF;QACA;QACA,IAAI,CAACI,QAAQ,CAACI,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,kBAAkB,CAAC;QACrC;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdX,QAAQ,CAAC,QAAQ,CAAC;MACpB;IACF,CAAC;IAED,IAAIC,KAAK,EAAE;MACTG,kBAAkB,CAAC,CAAC;IACtB,CAAC,MAAM;MACL;MACAJ,QAAQ,CAAC,QAAQ,CAAC;IACpB;EACF,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;;EAEd;EACA;EACA,oBAAOJ,OAAA,CAAAF,SAAA;IAAAI,QAAA,EAAGA;EAAQ,gBAAG,CAAC;AACxB,CAAC;AAACC,EAAA,CAzCIF,cAAc;EAAA,QACDL,WAAW;AAAA;AAAAoB,EAAA,GADxBf,cAAc;AA2CpB,eAAeA,cAAc;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}